<div class="container mt-4">
  <div class="d-flex justify-content-between align-items-center">
    <h1><%= @menu.title %></h1>
    <div>
      <% if user_signed_in? && @favorite.present? %>
        <%= link_to 'お気に入り解除する', favorite_path(@favorite), method: :delete, class: 'btn btn-danger favorite-button', remote: true, data: {menu_id: @menu.id} %>
      <% elsif user_signed_in? %>
        <%= link_to 'お気に入りする', favorites_path(menu_id: @menu.id), method: :post, class: 'btn btn-primary favorite-button', remote: true, data: {menu_id: @menu.id} %>
      <% end %>
    </div>
  </div>

  <div class="card mt-4">
    <div class="card-body"> 
      <% if @menu.video.attached? %>
        <div class="embed-responsive embed-responsive-4by3">
          <video class="embed-responsive-item" controls>
            <source src="<%= url_for(@menu.video) %>" type="video/mp4">
          </video>
        </div>
      <% else %>
        <p>No video attached</p>
      <% end %>
      <p class="card-text">難易度: <%= @menu.difficulty_level.step %></p>
      <p class="card-text">ラベル：
      <% @menu.labels.each do |label| %>
        <span class="badge badge-secondary"><%= label.name %></span>
      <% end %>
      </p>
      <p class="card-text">説明: <%= @menu.description %></p>
    </div>
  </div>

  <div class="card mt-4">
    <div class="card-body">
      <%= form_with id: 'calculate-form' do |f| %>
        <div class="form-row">
          <div class="form-group col-md-2">
            <%= f.label :practice_duration, '練習時間（分）' %>
            <%= f.number_field :practice_duration, name: 'practice_duration', class: 'form-control' %>
          </div>
          <div class="form-group col-md-2">
            <%= f.label :player_count_form, '人数' %>
            <%= f.number_field :player_count_form, name: 'player_count', class: 'form-control' %>
          </div>
          <div class="form-group col-md-2">
            <%= f.label :court_count, 'コート数' %>
            <%= f.number_field :court_count, name: 'court_count', class: 'form-control' %>
          </div>
          <div class="form-group col-md-2">
            <%= f.label :set_count, 'セット数' %>
            <%= f.number_field :set_count, name: 'set_count', class: 'form-control' %>
          </div>
          <div class="form-group col-md-4 align-self-end">
            <%= f.button '計算', type: 'button', id: 'calculate-button', class: 'btn btn-primary' %>
          </div>
        </div>
        <p id="result"></p>
      <% end %>
    </div>
  </div>
</div> 

<div id="court-container"></div>

 <%= link_to 'メニュー一覧に戻る', menus_path, class: 'btn btn-primary' %>
<script>
document.addEventListener('DOMContentLoaded', function() {
    document.querySelector('#calculate-button').addEventListener('click', function() {
        const practice_duration = parseFloat(document.querySelector('input[name="practice_duration"]').value);
        const player_count = parseFloat(document.querySelector('input[name="player_count"]').value);
        let court_count = parseFloat(document.querySelector('input[name="court_count"]').value);
        const set_count = parseFloat(document.querySelector('input[name="set_count"]').value);

        const result = practice_duration / player_count / court_count / set_count;
        const roundedResult = result.toFixed(1);
        const playerPerCourt = Math.floor(player_count / court_count);
        const extraPlayer = player_count % court_count;

        document.querySelector('#result').textContent = '1回あたりの交代時間は' + roundedResult + '分です。' + '1コートあたりの人数は' + playerPerCourt + '人です。' + (extraPlayer > 0 ? extraPlayer + '面は' + (playerPerCourt + 1) + '人です。' : '');
        const courtContainer = document.getElementById('court-container');                              //HTML文書内のIDが 'court-container' の要素を取得し、courtContainer という変数に格納
        courtContainer.innerHTML = '';                                                                  //court-container' 要素内のすべてのHTMLコンテンツを削除

        const maxPlayersPerCourt = 8;                                                                   // 1コートあたりの最大人数
        court_count = Math.min(Math.max(court_count, 1), 2);                                            // コート数が2以上なら2とする

        for (let i = 0; i < court_count; i++) {
            // 画像の追加
            const courtImage = document.createElement('img');
            window.courtImagePath = "<%= image_url('tennis_court.jpg') %>";                              //jsファイルに移動する場合は、この記述だけHTMLに残す。（scriptタグで囲って）
            courtImage.src = window.courtImagePath;
            courtImage.className = 'court-image';
            courtImage.alt = 'Tennis Court';
            courtImage.width = 395;                                                                     // 画像の幅を設定
            courtImage.height = 700;
            courtContainer.appendChild(courtImage);

            // canvasの追加
            const canvas = document.createElement('canvas');
            canvas.id = 'canvas-' + i;
            canvas.className = 'canvas';
            canvas.width = 395;
            canvas.height = 700;
            courtContainer.appendChild(canvas);
            
            const ctx = canvas.getContext('2d');

            let playersForThisCourt = Math.floor(player_count / court_count);                          //このコートに配置するプレーヤー数を計算します。合計プレーヤー数をコート数で割る
            if (i < player_count % court_count) playersForThisCourt++;                                 //プレーヤー数が均等に分割できない場合、最初のいくつかのコートに追加のプレーヤーを配置

            playersForThisCourt = Math.min(playersForThisCourt, maxPlayersPerCourt);                   //このコートに配置するプレーヤー数が最大値を超えないようにする

            const courtWidth = canvas.width;
            const courtHeight = canvas.height;

            const playersPerRow = Math.ceil(Math.sqrt(playersForThisCourt));  
            const cellWidth = courtWidth / playersPerRow;
            const cellHeight = courtHeight / playersPerRow;

            const playerPositions = <%= raw @player_positions.to_json %>;

            for (let j = 0; j < playersForThisCourt && j < playerPositions.length; j++) {
                const x = playerPositions[j].x;
                const y = playerPositions[j].y;
                ctx.font = '50px serif';
                ctx.fillText(`😎${j + 1}`, x, y);
            }
        }
    });
});
</script>



<%# <%= javascript_pack_tag 'menu/show' %> 


